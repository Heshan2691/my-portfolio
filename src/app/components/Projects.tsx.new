"use client";

import { useState, useRef } from "react";
import { motion, useInView, AnimatePresence } from "framer-motion";
import { FaExternalLinkAlt, FaGithub, FaCode } from "react-icons/fa";
import { HiChevronRight } from "react-icons/hi";

const projects = [
  {
    title: "Travel Planner App",
    description:
      "An AI-powered travel planning web application that helps tourists explore Sri Lanka by suggesting destinations, hotels, and events.",
    tech: ["React", "Next.js", "MongoDB", "Tailwind CSS"],
    github: "https://github.com/Heshan2691/travel-app",
    demo: "https://travel-app-demo.com",
    image: "/projects/travel-planner.jpg", // Add images to your public folder
    color: "from-sky-400 to-blue-600",
  },
  {
    title: "Job Portal Platform",
    description:
      "A MERN stack job portal with featured jobs and employers, including authentication, admin panel, and search functionality.",
    tech: ["MongoDB", "Express.js", "React", "Node.js"],
    github: "https://github.com/Heshan2691/job-portal",
    demo: "https://job-portal-demo.com",
    image: "/projects/job-portal.jpg",
    color: "from-indigo-400 to-violet-600",
  },
  {
    title: "Baby Driver Game",
    description:
      "An IoT-based learning game for children built using Arduino, ESP32, RFID, and React dashboard integration.",
    tech: ["Arduino", "ESP32", "React", "Node.js"],
    github: "https://github.com/Heshan2691/baby-driver",
    demo: "https://baby-driver-demo.com",
    image: "/projects/baby-driver.jpg",
    color: "from-amber-400 to-orange-600",
  },
];

// Animation variants
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.15,
    },
  },
};

const cardVariants = {
  hidden: { opacity: 0, y: 50 },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      type: "spring",
      damping: 15,
      stiffness: 100,
    },
  },
};

const titleVariants = {
  hidden: { opacity: 0, y: -20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      duration: 0.6,
      ease: [0.25, 0.1, 0.25, 1],
    },
  },
};

const ProjectCard = ({ project, index }) => {
  const [isHovered, setIsHovered] = useState(false);
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-10%" });
  
  return (
    <motion.div
      ref={ref}
      variants={cardVariants}
      initial="hidden"
      animate={isInView ? "visible" : "hidden"}
      custom={index}
      className="relative rounded-2xl overflow-hidden shadow-2xl group"
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
      whileHover={{ y: -8, transition: { duration: 0.3, ease: "easeOut" } }}
    >
      {/* Card background with overlay */}
      <div className="absolute inset-0 bg-gradient-to-br from-gray-900 via-gray-800 to-black opacity-90 z-0"></div>
      
      {/* Gradient border effect */}
      <div className="absolute inset-0 bg-gradient-to-br border border-white/10 rounded-2xl z-10"></div>
      
      {/* Animated background gradient */}
      <motion.div
        className={`absolute inset-0 bg-gradient-to-br ${project.color} opacity-0 blur-md z-0`}
        animate={{ opacity: isHovered ? 0.15 : 0 }}
        transition={{ duration: 0.4 }}
      ></motion.div>

      {/* Content container */}
      <div className="relative z-10 p-8 h-full flex flex-col">
        {/* Project Title */}
        <h3 className="text-2xl md:text-3xl font-bold mb-3 text-white">
          {project.title}
        </h3>
        
        {/* Description */}
        <p className="text-gray-300 mb-6 text-sm md:text-base leading-relaxed flex-grow">
          {project.description}
        </p>
        
        {/* Tech Stack */}
        <div className="flex flex-wrap gap-2 mb-6">
          {project.tech.map((tech, i) => (
            <span
              key={i}
              className={`text-xs px-3 py-1 rounded-full bg-gradient-to-r ${project.color} text-white font-medium shadow-md transition-transform hover:scale-105`}
            >
              {tech}
            </span>
          ))}
        </div>
        
        {/* Links */}
        <div className="flex gap-4 mt-auto relative z-10">
          <motion.a
            href={project.github}
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center gap-2 bg-white/10 backdrop-blur-sm hover:bg-white/20 px-4 py-2 rounded-lg text-white transition-all"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.98 }}
          >
            <FaGithub /> Code
          </motion.a>
          <motion.a
            href={project.demo}
            target="_blank"
            rel="noopener noreferrer"
            className={`flex items-center gap-2 bg-gradient-to-r ${project.color} px-4 py-2 rounded-lg text-white transition-all font-medium`}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.98 }}
          >
            <FaExternalLinkAlt /> Demo
          </motion.a>
        </div>
      </div>
    </motion.div>
  );
};

export default function Projects() {
  const [selectedCategory, setSelectedCategory] = useState("all");
  const containerRef = useRef(null);
  const isInView = useInView(containerRef, { once: false, amount: 0.2 });

  return (
    <section
      id="projects"
      className="py-24 px-6 bg-gradient-to-b from-gray-950 via-gray-900 to-black relative overflow-hidden"
    >
      {/* Background effects */}
      <div className="absolute inset-0 opacity-30">
        <div className="absolute top-0 -left-10 w-72 h-72 bg-blue-500 rounded-full filter blur-[100px] animate-blob"></div>
        <div className="absolute bottom-0 right-10 w-72 h-72 bg-purple-500 rounded-full filter blur-[100px] animate-blob animation-delay-2000"></div>
        <div className="absolute bottom-10 left-1/2 w-72 h-72 bg-indigo-500 rounded-full filter blur-[100px] animate-blob animation-delay-4000"></div>
      </div>

      <div className="max-w-7xl mx-auto relative z-10">
        {/* Heading */}
        <div className="text-center mb-16">
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 1 }}
            className="inline-block mb-3"
          >
            <div className="text-sm uppercase tracking-widest text-blue-400 font-mono mb-2">
              What I&apos;ve Built
            </div>
            <motion.h2
              variants={titleVariants}
              initial="hidden"
              animate={isInView ? "visible" : "hidden"}
              className="text-5xl md:text-6xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-blue-500"
            >
              Projects & Portfolio
            </motion.h2>
          </motion.div>
          <motion.p 
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.7, delay: 0.2 }}
            className="text-gray-400 max-w-2xl mx-auto text-lg mt-4"
          >
            Explore my featured projects showcasing my skills in web development, UI/UX design, and software engineering
          </motion.p>
          
          {/* Category filters - for future expansion */}
          <motion.div 
            className="flex flex-wrap justify-center gap-3 mt-8"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.7, delay: 0.3 }}
          >
            <button 
              className={`px-4 py-2 rounded-full text-sm transition-all ${selectedCategory === "all" 
                ? "bg-gradient-to-r from-cyan-500 to-blue-600 text-white shadow-md" 
                : "bg-white/10 text-gray-300 hover:bg-white/20"}`}
              onClick={() => setSelectedCategory("all")}
            >
              All Projects
            </button>
            <button 
              className={`px-4 py-2 rounded-full text-sm transition-all ${selectedCategory === "web" 
                ? "bg-gradient-to-r from-cyan-500 to-blue-600 text-white shadow-md" 
                : "bg-white/10 text-gray-300 hover:bg-white/20"}`}
              onClick={() => setSelectedCategory("web")}
            >
              Web Development
            </button>
            <button 
              className={`px-4 py-2 rounded-full text-sm transition-all ${selectedCategory === "mobile" 
                ? "bg-gradient-to-r from-cyan-500 to-blue-600 text-white shadow-md" 
                : "bg-white/10 text-gray-300 hover:bg-white/20"}`}
              onClick={() => setSelectedCategory("mobile")}
            >
              Mobile Apps
            </button>
          </motion.div>
        </div>

        {/* Projects Grid */}
        <motion.div
          ref={containerRef}
          variants={containerVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"}
          className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8"
        >
          {projects.map((project, index) => (
            <ProjectCard key={index} project={project} index={index} />
          ))}
        </motion.div>
        
        {/* View more projects button */}
        <motion.div 
          className="flex justify-center mt-12"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.7, delay: 0.5 }}
        >
          <motion.a
            href="https://github.com/Heshan2691"
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-500 hover:to-blue-700 text-white rounded-lg shadow-lg font-medium transition-colors group"
            whileHover={{ scale: 1.03 }}
            whileTap={{ scale: 0.98 }}
          >
            View More on GitHub <HiChevronRight className="group-hover:translate-x-1 transition-transform" />
          </motion.a>
        </motion.div>
      </div>
    </section>
  );
}
